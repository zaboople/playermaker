
- High
    - Load instruments:
        # Example of using an instrument from sound bank 1152 - splitting it into two 7-bit parts
        n the MIDI protocol itself, bank numbers are split into two 7-bit parts and transmitted as the value
        of two controllers, "Bank Select" and "Bank Select LSB":
        ... = new ShortMessage(ShortMessage.CONTROL_CHANGE, 0, 0,  1152 >> 7);   // = 9
        ... = new ShortMessage(ShortMessage.CONTROL_CHANGE, 0, 32, 1152 & 0x7f); // = 0
        ... = new ShortMessage(ShortMessage.PROGRAM_CHANGE, 0, 14, 0);
    - I want to be able to tell player A to rest until player B's current position. This likely means ChordList appears - it tracks the length of everything.
        Or I know, a chordsMeasured number that tells us how far we've measured lately.
    - Can't help but think you should just allow player to do bends/vibratos etc. on the last note played, and just
        have c() return player itself. But consider p(8,C).rest(16).n(16, D)
    - Hammer-ons/pull-offs
        - This makes no sense at all.
        - And a 16th that appears at the end of a half (right before another note)
        - Or a 16th that starts a half
    - Slurs/Slides or do we even - just do 128ths... but we could do them different
    - Change speed - and put speed in player. My idea is that speed is typically 0, but
        you can enhance it by speed(+/-X). This means anytime a Sound is added, the
        speed needs to be added to it.

- Medium
    -Portamento, Legato, Reverb?
        http://audioundone.com/tip-knowing-the-midi-messages-part-2
    - off-tune mode
        - create a map of notes to pitch bends, so that we can retrieve at runtime; this would go in the player itself.

- Low
    - For testing it would be nice to add multi-sequence play, i.e. play multiple MyMidi's in a row
    Speed should be modulated as well - don't apply it directly to the note speed, but after the note is transposed.

    -Bends need to throw exceptions when out of range




